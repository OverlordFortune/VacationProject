@model Vacations.Models.RequestProcessViewModel
@{
    var dateOfBegin = Model.DateOfBegin.ToString("yyyy-MM-dd");
    var dateOfEnd = Model.DateOfEnd.ToString("yyyy-MM-dd");
    var today = DateTime.UtcNow.Day;
    var isCalledFromList = false;
    if (ViewData["isCalledFromList"].ToString() != "false")
    {
        isCalledFromList = ViewData["isCalledFromList"].ToString().AsBool();
    }

    string url = "https://teamresponse418storage.blob.core.windows.net/photos/";
}


@using (Html.BeginForm("ProcessPopupPartial", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "modalForm" }))
{
    @Html.Hidden("EmployeeID", Model.EmployeeID)
    @Html.Hidden("VacationID", Model.VacationID)
    <div class="modal-content bg-dark" style="color:gray; border:solid gray 1px;">

        <div class="modal-header form-header bg-global" style="color:white; border-bottom:solid gray 1px !important;height:50px; vertical-align:middle;">
            <div class="modal-title" id="ModalTitle">Vacation request</div>
        </div>
        <div class="modal-body pb-0" style="margin:10px;">
            <div class="form-group">
                <div style="overflow: hidden">
                    <div style="float: left;">
                        <img src="@string.Format($"{url}{Model.EmployeeID}.jpg")" class="rounded-circle profilePhoto" style="object-fit: cover;padding-left:5px;" />
                    </div>
                    <div class="float-right" style="padding-right:200px;">
                        <p style="color:white !important">@Html.DisplayFor(m => m.EmployeeName)</p>
                        <div>
                            <p style="color:white !important">  @Html.DisplayFor(m => m.JobTitle)</p>
                        </div>
                        <div>
                            <p style="color:white !important">@Html.DisplayFor(m => m.TeamName) - @Html.DisplayFor(m => m.TeamLeadName)</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="container-fluid bg-dark text-white">
                    <div class="row">
                        <div class="col-6 col-ms-12">
                            <ul class="list-unstyled zebra">
                                <li> <label for="vacationTypeSelect">vacation type</label></li>
                                @Html.DisplayFor(m => m.VacationType, new { @class = "control-label colorWhite" })
                            </ul>
                        </div>
                        <div class="col-6 col-ms-12">
                            <ul class="list-unstyled zebra">
                                <li>@Html.LabelFor(m => m.DateOfBegin, new { @class = "control-label" }) @Html.ValidationMessageFor(m => m.DateOfBegin, "", new { @class = "Denied" })</li>
                                <li>
                                    @if (!Model.Status.Equals("Pending"))
                                    {
                                        <input type="date" disabled class="form-control bg-dark border-grey colorWhite" id="begin" name="DateOfBegin" value="@dateOfBegin">
                                    }
                                    else
                                    {
                                        <input type="date" class="form-control bg-dark border-grey colorWhite" id="begin" name="DateOfBegin" onchange="CalcDiff()" value="@dateOfBegin">
                                    }
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="row" style="border:none !important">
                        <div class="col-6 col-ms-12">
                            <ul class="list-unstyled zebra comment-area">
                                <li>
                                    @Html.LabelFor(m => m.Comment, new { @class = "control-label" })
                                </li>
                                <li>
                                    @Html.TextAreaFor(model => model.Comment, 6, 23, new { @class = "form-control bg-dark border-grey", style = "resize:none;color:white;border:none; padding:2px;", @disabled = "true" })
                                </li>
                            </ul>
                        </div>
                        <div class="col-6">
                            <div class="row">
                                <div class="col-12 col-ms-12">
                                    <ul class="list-unstyled zebra">
                                        <li> @Html.LabelFor(m => m.DateOfEnd, new { @class = "control-label" }) @Html.ValidationMessageFor(m => m.DateOfEnd, "", new { @class = "Denied" })</li>
                                        <li>
                                            @if (!Model.Status.Equals("Pending"))
                                            {
                                                <input type="date" disabled class="form-control bg-dark border-grey colorWhite" id="end" name="DateOfEnd" value="@dateOfEnd">
                                            }
                                            else
                                            {
                                                <input type="date" class="form-control bg-dark border-grey colorWhite" id="end" name="DateOfEnd" onchange="CalcDiff()" value="@dateOfEnd">
                                            }
                                        </li>
                                    </ul>
                                </div>

                            </div>
                            @if (!isCalledFromList.ToString().AsBool())
                            {
                                <div class="row">
                                    <div class="col-4 col-xs-12" style="margin-top:20px;">
                                        <ul class="list-unstyled zebra m-0">
                                            <li> <label for="among">amount</label></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="container m-0 p-0 text-light">
                                            @Html.TextBoxFor(m => m.Duration, new { @class = "form-control bg-dark field-days-width border-grey colorWhite", @readonly = "readonly", @maxlength = "2", @id = "Duration", @name = "Duration", @placeholder = "XX", @style = "display:inline; max-width:46px;" }) Duration
                                                                            @Html.ValidationMessageFor(m => m.Duration, "", new { @class = "Denied" })
                                                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-4 col-xs-12" style="margin-top:20px;">
                                        <ul class="list-unstyled zebra m-0">
                                            <li> <label for="among">left</label></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="container m-0 p-0 text-light"><input readonly="readonly" type="text" class="form-control bg-dark field-days-width border-grey colorWhite" maxlength="2" id="BalanceChange" placeholder="XX" style="display:inline; max-width:46px;" value="@(Model.DateOfEnd.Day - today)" /> days left</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    @if (Model.Status.Equals("Pending"))
                    {
                    <div class=" modal-footer" style="display:block; border-top: 1px solid #727272">
                        @if (Model.EmployeesBalance < Model.Duration)
                        {
                            <p class="DeniedLoginText">Answer the Request - employees balance is less then requested vacation duration. </p>
                        }
                        else
                        {
                            <p>Answer the Request</p>
                        }
                        <div class="row">
                            <div class="col-6">
                                @Html.RadioButton("Result", "Approved", new { @checked = "checked" })
                                <label class="Approved"> Approve</label>
                            </div>
                            <div class="col-6">
                                <label class="control1 control1--radio">

                                    @Html.RadioButton("Result", "Denied")
                                    <label class="Denied">Refuse</label>
                                </label>
                            </div>
                        </div>
                        <label style="color:gray;">comment</label>
                        @Html.TextArea("Discription", new { @class = "form - control ownTextarea", style = "background-color:#2e2e2e; border:solid 1px gray; resize:none; color:white; min-height:110px; min-width:414px;", @maxlength = "140", @id = "Discription" })
                        <div class="row">
                            <div class="col-5" style="padding:0">
                                <ul class="list-unstyled zebra">
                                    <li>
                                        <input type="button" class="float-left form-control bg-dark button-cancel border-grey float-left" style="cursor:pointer;width:175px" data-dismiss="modal" value="CANCEL" />
                                    </li>
                                </ul>
                            </div>
                            <div class="col-7 bg-dark " style="padding-right:10px;">
                                <ul class="list-unstyled zebra ">
                                    <li>
                                        <input type="submit" class="form-control bg-dark button-done border-grey bt-gradient float-right" style="cursor:pointer;height:40px !important; padding-top:5px; width:220px;" value="DONE" />
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    }
                    else
                    {
                        <div class=" modal-footer pb-0" style="display:block; border:none;">
                            <div class="row">
                                <div class="col-6 float-left " style="text-align:center;vertical-align:middle; padding-top:10px;">
                                    <p class="@Model.Status">@Model.Status by @Model.ProcessedBy</p>
                                </div>
                                <div class="col-6">
                                    <ul class="list-unstyled zebra float-left">
                                        <li>
                                            <input type="button" class="form-control bg-dark button-done border-grey bt-gradient float-right" data-dismiss="modal" style="height:40px !important; padding-top:5px;cursor:pointer; width:220px;" value="CLOSE" />
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
<script>
    $.validator.unobtrusive.parse("#modalForm");
    
</script>