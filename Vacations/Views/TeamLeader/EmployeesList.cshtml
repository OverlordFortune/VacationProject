@using VacationsBLL
@using Vacations.Models
@using PagedList.Mvc;
@using VacationsBLL.Services
@model PagedList.IPagedList<Vacations.Models.EmployeeListViewModel>
@{
    string searchKey = ViewData["SearchKey"] as string;
    EmployeeService employeeService = ViewBag.EmployeeService;
    TeamService teamService = ViewBag.TeamService;
}
@using (Html.BeginForm("EmployeesList", "TeamLeader", FormMethod.Get))  
{
    <div class="row">
        <div class="col-12">
            <div class="container mt-3">
                <div class="container m-0 p-0 ">
                    <div class="container container-rounded m-0 p-0">
                        <div class="container container-rounded m-0 p-0" style="border: 2px solid #757575 !important;">
                            <div class="toInsert">
                                <div class="row m-auto text-white">
                                    <div class="container-fluid bg-dark" style="border-bottom:solid 1px gray; height:50px;">
                                        <p style="margin-bottom:0; margin-top:10px;">
                                            <strong id="ModalTitle">List of Employees</strong>
                                            <button class=" button-add-photo" style="width:100px !important;height:30px;margin-left:5px;  float:right; " type="submit">Find</button>
                                            <input type="text" class="bg-dark colorWhite float-right" placeholder="search" style="outline:none;box-shadow:none; border:2px solid gray; border-radius:4px; padding-left:5px;" name="searchKey" autocomplete="off" value="@searchKey" />
                                        </p>
                                    </div>
                                </div>
                                <table class="table text-white m-0 p-0 backColor " style="font-size:15px; border-top:none;">

                                    @if (Model.Count > 0)
                                    {
                                        <tr class="text-light-grey border-grey" style="font-size: 12px; border-bottom: solid 1px gray !important;">
                                            <td style="border-top: none"></td>
                                            <td style="border-top: none">name</td>
                                            <td style="text-align: center; border-top: none">phone number</td>
                                            <td style="text-align: center; border-top: none">work email</td>
                                            <td style="text-align: right; border-top: none">vacation balance</td>
                                            <td style="border-top: none"></td>
                                        </tr>

                                        var employeesListGroups = (from employeeListDto in Model
                                                                   group employeeListDto by employeeListDto.TeamDto.TeamID).ToList();

                                        var countOfEmpty = employeesListGroups.Count(x => x.Key == "Empty");

                                        foreach (IGrouping<string, EmployeeListViewModel> g in employeesListGroups)
                                        {
                                            if (g.Key != "Empty")
                                            {
                                                <tr style="font-size: 12px; border-bottom: solid 1px gray !important; height: 30px !important">
                                                    <td style="border-top: none; width: 15px;">
                                                        <img src="~/Content/Icons/icons8-bookmark.svg" style="height: 15px;" />
                                                    </td>
                                                    <td style="border-top: none;">
                                                        <p style="margin:0">@employeeService.GetTeamNameById(g.Key)</p>
                                                    </td>
                                                    <td style="border-top: none;">
                                                    <td style="border-top: none;">
                                                    <td style="border-top: none;"></td>
                                                    <td style="border-top: none">
                                                        <img src="~/Content/Icons/eye.svg" class="ownPopup" style="margin-left:30px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("ViewTeamProfile", "TeamLeader", new { id = @g.Key })'" />
                                                        <img src="~/Content/Icons/edit icon grey.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("EditTeam", "TeamLeader", new { id = @g.Key })'" />
                                                    </td>
                                                </tr>

                                                if (searchKey == null)
                                                {
                                                    var employee = employeeService.GetUserById(teamService.GetById(g.Key).TeamLeadID);
                                                    <tr style="font-size: 12px; border-bottom: solid 1px gray !important;">
                                                        <td style="border-top: none"></td>
                                                        <td style="border-top: none">@employee.Name @employee.Surname</td>
                                                        <td style="text-align: center; border-top: none">@employee.PhoneNumber</td>
                                                        <td style="text-align: center; border-top: none">@employee.WorkEmail</td>
                                                        <td style="text-align: right; border-top: none">@employee.VacationBalance days</td>
                                                        <td style="border-top: none">
                                                            <img src="~/Content/Icons/user-icon.svg" class="ownPopup" style="margin-left:30px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("EmployeeView", new { id = employee.EmployeeID })'" />
                                                            <img src="~/Content/Icons/edit icon grey.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("Edit", "TeamLeader", new { id = employee.EmployeeID })'" />
                                                        </td>
                                                    </tr>

                                                }
                                                foreach (var t in g)
                                                {

                                                    <tr style="font-size: 12px; border-bottom: solid 1px gray !important;">
                                                        <td style="border-top: none"></td>
                                                        <td style="border-top: none">@t.EmployeeDto.Name @t.EmployeeDto.Surname</td>
                                                        <td style="text-align: center; border-top: none">@t.EmployeeDto.PhoneNumber</td>
                                                        <td style="text-align: center; border-top: none">@t.EmployeeDto.WorkEmail</td>
                                                        <td style="text-align: right; border-top: none">@t.EmployeeDto.VacationBalance days</td>
                                                        <td style="border-top: none; width:100px !important;">
                                                            @if (t.EmployeeDto.CurrentVacationID == null)
                                                            {
                                                                <img src="~/Content/Icons/@string.Format($"not-on-vacation.svg")" style="height:16px; width:16px;cursor:pointer;" onclick='ShowCreateForEmployeePopup("@string.Format($"{t.EmployeeDto.EmployeeID}")")' />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/Icons/@string.Format($"on-vacation.svg")" style="height:16px; width:16px;cursor:pointer;" onclick='ShowViewPopup("@string.Format($"{t.EmployeeDto.CurrentVacationID}")","true")' />
                                                            }
                                                            <img src="~/Content/Icons/user-icon.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("EmployeeView", new { id = t.EmployeeDto.EmployeeID })'" />
                                                            <img src="~/Content/Icons/edit icon grey.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("Edit", "TeamLeader", new { id = t.EmployeeDto.EmployeeID })'" />
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else if (countOfEmpty != 0)
                                            {
                                                <tr style="font-size: 12px; border-bottom: solid 1px gray !important; height: 30px !important">
                                                    <td style="border-top: none; width: 15px;">
                                                        <img src="~/Content/Icons/icons8-bookmark.svg" style="height: 15px;" />
                                                    </td>
                                                    <td style="border-top: none;">
                                                        <p style="margin:0">@g.Key</p>
                                                    </td>
                                                    <td style="border-top: none;">
                                                    <td style="border-top: none;">
                                                    <td style="border-top: none;">
                                                    <td style="border-top: none;"></td>
                                                </tr>
                                                foreach (var t in g)
                                                {
                                                    <tr style="font-size: 12px; border-bottom: solid 1px gray !important;">
                                                        <td style="border-top: none"></td>
                                                        <td style="border-top: none">@t.EmployeeDto.Name @t.EmployeeDto.Surname</td>
                                                        <td style="text-align: center; border-top: none">@t.EmployeeDto.PhoneNumber</td>
                                                        <td style="text-align: center; border-top: none">@t.EmployeeDto.WorkEmail</td>
                                                        <td style="text-align: right; border-top: none">@t.EmployeeDto.VacationBalance days</td>
                                                        <td style="border-top: none; width:100px !important;">
                                                            @if (t.EmployeeDto.CurrentVacationID == null)
                                                            {
                                                                <img src="~/Content/Icons/@string.Format($"not-on-vacation.svg")" style="height:16px; cursor:pointer;width:16px" onclick='ShowCreateForEmployeePopup("@string.Format($"{t.EmployeeDto.EmployeeID}")")' />
                                                            }
                                                            else
                                                            {
                                                                <img src="~/Content/Icons/@string.Format($"on-vacation.svg")" style="height:16px;cursor:pointer; width:16px" onclick='ShowViewPopup("@string.Format($"{t.EmployeeDto.CurrentVacationID}")","true")' />
                                                            }
                                                            <img src="~/Content/Icons/user-icon.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("EmployeeView", new { id = t.EmployeeDto.EmployeeID })'" />
                                                            <img src="~/Content/Icons/edit icon grey.svg" class="ownPopup" style="margin-left:12px;cursor:pointer; height:14px; width:14px" onclick="location='@Url.Action("Edit", "TeamLeader", new { id = t.EmployeeDto.EmployeeID })'" />
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <tr style="color:#dcdcdc">
                                            <td style="border-top:none">No employees found</td>
                                            <th style="border-top:none"></th>
                                            <td style="border-top:none"></td>
                                            <td style="border-top:none"></td>
                                            <td style="border-top:none"></td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade" data-backdrop="static" id="vacationModal" tabindex="-1">
    <div class="modal-dialog">
        <div id="toReplace"></div>
    </div>
</div>
@if ((Model.FirstItemOnPage.Equals(1) && Model.Count >= 10) || Model.FirstItemOnPage > 10)
{
    <div class="btn-group pageMenu">
        @Html.PagedListPager(Model, page => Url.Action("EmployeesList", new { page,searchKey }), new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Never,
            DisplayLinkToLastPage = PagedListDisplayMode.Never,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayEllipsesWhenNotShowingAllPageNumbers = false,
            MaximumPageNumbersToDisplay = 3
        }))
    </div>
}
@section Scripts {
    <script>
        function ShowViewPopup(id, bool) {
            var url = "/TeamLeader/ProcessPopupPartial?id=" + id + "&isCalledFromList=" + bool;
            $("#ModalTitle").html("Vacation Request");
            $('#vacationModal').modal();
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    $("#toReplace").html(data);
                }
            })
        }
        function ShowCreateForEmployeePopup(id) {
            var url = "/TeamLeader/CreateRequestForEmployeePartial?id=" + id;
            $("#ModalTitle").html("Vacation Request");
            $('#vacationModal').modal();
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    $("#toReplace").html(data);
                }
            })
        }
        function GetDiff() {
            var dropdt = new Date(document.getElementById("end").value);
            var pickdt = new Date(document.getElementById("begin").value);
            return parseInt((dropdt - pickdt) / (24 * 3600 * 1000));
        }
        function CalcDiff() {
            if (document.getElementById("begin").value && document.getElementById("end").value) {
                document.getElementById("Duration").value = GetDiff();
            }
        }
    </script>

}
